<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://genshinstart.fun</id>
    <title>阴暗の小窝</title>
    <subtitle>hekaze</subtitle>
    <icon>https://genshinstart.fun/assets/favicon.ico</icon>
    <link href="https://genshinstart.fun" />
    <author>
      <name>柳逸飞尘</name>
    </author>
    <updated>2023-11-11T04:19:59.408Z</updated>
    <entry>
        <id>https://genshinstart.fun/2023/11/11/note/11-11/git%E4%B8%8A%E4%BC%A0%E6%8E%92%E9%99%A4%E6%96%87%E4%BB%B6/</id>
        <title>git上传忽略</title>
        <link rel="alternate" href="https://genshinstart.fun/2023/11/11/note/11-11/git%E4%B8%8A%E4%BC%A0%E6%8E%92%E9%99%A4%E6%96%87%E4%BB%B6/"/>
        <content type="html">&lt;p&gt;1、在需要创建 .gitignore 文件的文件夹，右键选择 Git Bash 进入命令行，进入项目所在目录。&lt;/p&gt;
&lt;p&gt;2、输入 touch .gitignore ，生成 “.gitignore” 文件。&lt;/p&gt;
&lt;p&gt;3、在”.gitignore” 文件里输入你要忽略的文件夹及其文件就可以了。（注意格式）&lt;/p&gt;
&lt;p&gt;我的.gitignore&lt;/p&gt;
&lt;p&gt;.DS_Store&lt;br /&gt;
node_modules/&lt;br /&gt;
dist/&lt;br /&gt;
npm-debug.log&lt;br /&gt;
4、下面我们看看常用的规则：&lt;br /&gt;
1）/mtk/               过滤整个文件夹&lt;br /&gt;
 2）*.zip                过滤所有.zip 文件&lt;br /&gt;
 3）/mtk/do.c         过滤某个具体文件&lt;/p&gt;
&lt;p&gt;node_modules/   表示过滤这个文件夹&lt;br /&gt;
&lt;em&gt;.zip   过滤 zip 后缀文件&lt;br /&gt;
 demo.html   过滤该文件&lt;br /&gt;
！src/   不过滤该文件夹&lt;br /&gt;
！&lt;/em&gt;.js   不过滤 java 源文件&lt;br /&gt;
！index.html 不过滤该文件&lt;br /&gt;
 1）配置语法：&lt;br /&gt;
以斜杠 “/” 开头表示目录；&lt;br /&gt;
以星号 “*” 通配多个字符；&lt;br /&gt;
以问号 “?” 通配单个字符&lt;br /&gt;
以方括号 “[]” 包含单个字符的匹配列表；&lt;br /&gt;
以叹号 “!” 表示不忽略 (跟踪) 匹配到的文件或目录；&lt;/p&gt;
&lt;p&gt;此外，git 对于 .ignore 配置文件是按行从上到下进行规则匹配的，意味着如果前面的规则匹配的范围更大，则后面的规则将不会生效；&lt;/p&gt;
&lt;p&gt;2）示例说明&lt;br /&gt;
 a）规则：fd1/*&lt;br /&gt;
 说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录，都会被忽略；&lt;br /&gt;
b）规则：/fd1/*&lt;br /&gt;
 说明：忽略根目录下的 /fd1/ 目录的全部内容；&lt;br /&gt;
c）规则：&lt;br /&gt;
/*&lt;br /&gt;
!.gitignore&lt;br /&gt;
!/fw/bin/&lt;br /&gt;
!/fw/sf/&lt;br /&gt;
 说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 /fw/bin/ 和 /fw/sf/ 目录；&lt;/p&gt;
&lt;p&gt;5、操作方法&lt;/p&gt;
&lt;p&gt;一是常规的 windows 操作&lt;/p&gt;
&lt;p&gt;根目录下创建 gitignore.txt；&lt;br /&gt;
编辑 gitignore.txt，写下你的规则，例如加上 node_modules/；&lt;br /&gt;
打开命令行窗口，切换到根目录（可以直接在文件夹上面的地址栏输入 cmd 回车）；&lt;br /&gt;
执行命令 ren gitignore.txt .gitignore。&lt;br /&gt;
二是用 Git Bash&lt;/p&gt;
&lt;p&gt;根目录下右键选择 “Git Bash Here” 进入 bash 命令窗口；&lt;br /&gt;
输入 vim .gitignore 命令，打开文件（没有文件会自动创建）；&lt;br /&gt;
按 i 键切换到编辑状态，输入规则，例如 node_modules/，然后按 Esc 键退出编辑，输入:wq 保存退出。&lt;br /&gt;
最后需要强调的一点是，如果你不慎在创建.gitignore 文件之前就 push 了项目，那么即使你在.gitignore 文件中写入新的过滤规则，这些规则也不会起作用，Git 仍然会对所有文件进行版本管理。&lt;br /&gt;
简单来说，出现这种问题的原因就是 Git 已经开始管理这些文件了，所以你无法再通过过滤规则过滤它们。因此一定要养成在项目开始就创建.gitignore 文件的习惯，否则一旦 push，处理起来会非常麻烦。&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;创建.gitignore 文件之前就 push 了文件 (如何忽略)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;git rm -r --cached 要忽略的文件 / 文件夹名字&lt;br /&gt;
 ————————————————&lt;br /&gt;
 版权声明：本文为 CSDN 博主「懂懂 kkw」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。&lt;br /&gt;
原文链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ppYW5kYW4xMTI3L2FydGljbGUvZGV0YWlscy84MTIwNTUzMA==&#34;&gt;https://blog.csdn.net/jiandan1127/article/details/81205530&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="note" scheme="https://genshinstart.fun/categories/note/" />
        <category term="笔记" scheme="https://genshinstart.fun/tags/%E7%AC%94%E8%AE%B0/" />
        <category term="github" scheme="https://genshinstart.fun/tags/github/" />
        <updated>2023-11-11T04:19:59.408Z</updated>
    </entry>
    <entry>
        <id>https://genshinstart.fun/2023/11/09/note/11_10/%E5%B0%8F%E6%B5%8B%E8%AF%95/</id>
        <title>小测试</title>
        <link rel="alternate" href="https://genshinstart.fun/2023/11/09/note/11_10/%E5%B0%8F%E6%B5%8B%E8%AF%95/"/>
        <content type="html">&lt;h1 id=&#34;代办&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代办&#34;&gt;#&lt;/a&gt; 代办&lt;/h1&gt;
&lt;p&gt;解决 alternate 无法修改的问题&lt;br /&gt;
解决主页面的轮播图问题&lt;br /&gt;
解决文章的封面问题&lt;br /&gt;
解决音乐加入的问题&lt;/p&gt;
&lt;h2 id=&#34;测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;总结：需要先在 git 上 push 后，再 pnpm run netlify，才能显示更新。&lt;/p&gt;
&lt;p&gt;到底是哪里出了问题让我的 alternate 改不了？？？&lt;/p&gt;
&lt;h3 id=&#34;存在问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存在问题&#34;&gt;#&lt;/a&gt; 存在问题&lt;/h3&gt;
&lt;p&gt;加不了音乐，一加音乐文章就消失&lt;/p&gt;
&lt;p&gt;本地部署会有变化，但网上部署却改变不了 alternate，也无法显示图片&lt;/p&gt;
</content>
        <category term="note" scheme="https://genshinstart.fun/categories/note/" />
        <category term="测试" scheme="https://genshinstart.fun/tags/%E6%B5%8B%E8%AF%95/" />
        <category term="hexo" scheme="https://genshinstart.fun/tags/hexo/" />
        <updated>2023-11-09T09:38:07.000Z</updated>
    </entry>
</feed>
